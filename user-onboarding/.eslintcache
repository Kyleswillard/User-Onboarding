[{"C:\\Users\\phoen\\Desktop\\Lambda\\User-Onboarding\\user-onboarding\\src\\index.js":"1","C:\\Users\\phoen\\Desktop\\Lambda\\User-Onboarding\\user-onboarding\\src\\App.js":"2","C:\\Users\\phoen\\Desktop\\Lambda\\User-Onboarding\\user-onboarding\\src\\components\\form.component.jsx":"3","C:\\Users\\phoen\\Desktop\\Lambda\\User-Onboarding\\user-onboarding\\src\\reportWebVitals.js":"4","C:\\Users\\phoen\\Desktop\\Lambda\\User-Onboarding\\user-onboarding\\src\\components\\table.js":"5"},{"size":500,"mtime":1606501409424,"results":"6","hashOfConfig":"7"},{"size":1080,"mtime":1607555774297,"results":"8","hashOfConfig":"7"},{"size":4776,"mtime":1607555746737,"results":"9","hashOfConfig":"7"},{"size":362,"mtime":1606501409424,"results":"10","hashOfConfig":"7"},{"size":790,"mtime":1607555822584,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hsc259",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\phoen\\Desktop\\Lambda\\User-Onboarding\\user-onboarding\\src\\index.js",[],"C:\\Users\\phoen\\Desktop\\Lambda\\User-Onboarding\\user-onboarding\\src\\App.js",["23"],"C:\\Users\\phoen\\Desktop\\Lambda\\User-Onboarding\\user-onboarding\\src\\components\\form.component.jsx",["24","25","26"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, FormGroup, Input, Label, Row, Col, Button } from 'reactstrap'\r\nimport * as yup from 'yup'\r\nimport './form.styles.css'\r\n\r\nconst NewForm = ({ submitUser }) => {\r\n    const [formState, setFormState] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        terms: '',\r\n    })\r\n\r\n    const [errors, setErrors] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n    })\r\n\r\n    const [isButtonDisabled, setIsButtonDisabled] = useState(true)\r\n\r\n    const formSchema = yup.object().shape({\r\n        name: yup.string().required('Name is a required field'),\r\n        email: yup.string().email('Must be a valid email address').required(),\r\n        password: yup\r\n            .string()\r\n            .required('No password provided.')\r\n            .min(8, 'Password is too short - should be 8 chars minimum.')\r\n            .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\r\n        terms: yup\r\n            .boolean()\r\n            .oneOf([true], 'You must agree to the terms of service'),\r\n    })\r\n\r\n    const validateChange = (e) => {\r\n        yup.reach(formSchema, e.target.name)\r\n            .validate(e.target.value)\r\n            .then((valid) => {\r\n                setErrors({ ...errors, [e.target.name]: '' })\r\n            })\r\n            .catch((err) => {\r\n                console.log('error!', err)\r\n                setErrors({ ...errors, [e.target.name]: err.errors[0] })\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        formSchema.isValid(formState).then((valid) => {\r\n            console.log('valid?', valid)\r\n            setIsButtonDisabled(!valid)\r\n        })\r\n    }, [formState])\r\n\r\n    const handleChange = (e) => {\r\n        e.persist()\r\n        validateChange(e)\r\n        if (e.target.name === 'terms') {\r\n            setFormState({ ...formState, terms: e.target.checked })\r\n        } else {\r\n            setFormState({ ...formState, [e.target.name]: e.target.value })\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        submitUser(formState)\r\n        setFormState({\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            terms: '',\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <h1 style={{ marginBottom: '5%' }}>New User</h1>\r\n            <FormGroup>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <Input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    placeholder=\"Name\"\r\n                    value={formState.name}\r\n                    onChange={handleChange}\r\n                    cy-data=\"name\"\r\n                />\r\n                {errors.name.length > 0 ? (\r\n                    <p className=\"error\">{errors.name}</p>\r\n                ) : null}\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <Input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={formState.email}\r\n                    onChange={handleChange}\r\n                    cy-data=\"email\"\r\n                />\r\n                {errors.email.length > 0 ? (\r\n                    <p className=\"error\">{errors.email}</p>\r\n                ) : null}\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <label htmlFor=\"password\">Password</label>\r\n                <Input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={formState.password}\r\n                    onChange={handleChange}\r\n                    cy-data=\"password\"\r\n                />\r\n                {errors.password.length > 0 ? (\r\n                    <p className=\"error\">{errors.password}</p>\r\n                ) : null}\r\n            </FormGroup>\r\n            <FormGroup check>\r\n                <Label check>\r\n                    <Input\r\n                        type=\"checkbox\"\r\n                        onChange={handleChange}\r\n                        name=\"terms\"\r\n                        cy-data=\"terms\"\r\n                    />{' '}\r\n                    I Agree To The Terms Of Service\r\n                </Label>\r\n            </FormGroup>\r\n            <Button\r\n                color=\"primary\"\r\n                style={{ marginTop: '3%' }}\r\n                type=\"submit\"\r\n                disabled={isButtonDisabled}\r\n                cy-data=\"submit\"\r\n            >\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default NewForm\r\n","C:\\Users\\phoen\\Desktop\\Lambda\\User-Onboarding\\user-onboarding\\src\\reportWebVitals.js",[],"C:\\Users\\phoen\\Desktop\\Lambda\\User-Onboarding\\user-onboarding\\src\\components\\table.js",[],{"ruleId":"27","severity":1,"message":"28","line":1,"column":27,"nodeType":"29","messageId":"30","endLine":1,"endColumn":36},{"ruleId":"27","severity":1,"message":"31","line":2,"column":41,"nodeType":"29","messageId":"30","endLine":2,"endColumn":44},{"ruleId":"27","severity":1,"message":"32","line":2,"column":46,"nodeType":"29","messageId":"30","endLine":2,"endColumn":49},{"ruleId":"33","severity":1,"message":"34","line":52,"column":8,"nodeType":"35","endLine":52,"endColumn":19,"suggestions":"36"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formSchema'. Either include it or remove the dependency array.","ArrayExpression",["37"],{"desc":"38","fix":"39"},"Update the dependencies array to be: [formSchema, formState]",{"range":"40","text":"41"},[1708,1719],"[formSchema, formState]"]